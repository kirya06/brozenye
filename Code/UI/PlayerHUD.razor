@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent
@namespace Sandbox

<root>
	<div class="inventory">
		<div class="slot-container">
			@for(int i = 0; i < inventory.Items.Length; i++) {
				<div class="inventory-slot @(isChosen(i))"></div>
			}
		</div>

		<p class="item-title">@(inventory.SelectedItem)</p>
	</div>

	<div class="money-counter">@(inventory.Rubles) P</div>
	<div class="item-hover-name">@(hoverItemName())</div>

	<div class="objective">
		<div class="objective-title">OBJECTIVE</div>
		<div class="objective-tooltip">@(goal.ChosenGoal.Title)</div>
		@foreach(var keyval in goal.ChosenGoal.AlchemicProperties) {
			<div>@(coolAttributeName(keyval.Key)) => @(keyval.Value)</div>
		}

		@if(goal.ReadyToFinish) {
			<div class="objective-finished">FINISHED: Jump into the VOID when ready</div>
		}
	</div>
</root>

@code
{	
	[Property] public GameObject Player { get; set; }

	private string isChosen(int i) => inventory.Cursor == i ? "inventory-slot-chosen" : "";
	private string hoverItemName() {
		if (walker.Selected is null) return "";
		if (!walker.IsHoveringItem) {
			if (walker.IsHoveringShop) {
				var shop = walker.Selected as ShopComponent;
				return $"{shop.Item.Name} - {shop.Price}P";
			}
			return "";

		}

		var item = walker.Selected as ItemComponent;
		return item.ToString();
	}
	private string coolAttributeName(string name) {
		return $"[{name.ToUpper()}]";
	}


	private PlayerInventory inventory;
	private PlayerWalker walker;
	private GameGoal goal;

	protected override void OnStart() {
		inventory = Player.GetComponent<PlayerInventory>();
		walker = Player.GetComponent<PlayerWalker>();
		goal = Scene.GetComponentInChildren<GameGoal>();
	}

	protected override int BuildHash() {
		//pohuy
		return System.HashCode.Combine(Time.Now);
	}
}
